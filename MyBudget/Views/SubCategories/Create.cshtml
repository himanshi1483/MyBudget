@model MyBudget.Models.SubCategories

@{
    ViewBag.Title = "Create";
}

<div class="row">
    <div class="col-md-6 ">
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class="portlet light ">
            <div class="portlet-title">
                <div class="caption font-red-sunglo">
                    <i class="icon-settings font-red-sunglo"></i>
                    <span class="caption-subject bold uppercase"> Create</span>
                </div>
            </div>
            <div class="portlet-body form">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>SubCategories</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Frequency, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EnumDropDownListFor(x => x.Frequency, "Frequency", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpectedAmount, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ExpectedAmount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ExpectedAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpectedInterest, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ExpectedInterest, new { htmlAttributes = new { @class = "form-control" } }) %
                            @Html.ValidationMessageFor(model => model.ExpectedInterest, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker" }, @type = "date" })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datepicker " }, @type = "date" })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentCategoryId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("ParentCategoryId", new SelectList(ViewBag.Categories, "CategoryId", "CategoryName"), new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.ParentCategoryId, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.ParentCategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DepositType, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @*@Html.DropDownList("DepositType", new SelectList(ViewBag.Categories, "CategoryId", "CategoryName"))*@
                            @Html.EnumDropDownListFor(model => model.DepositType, "DepositType", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DepositType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsDefault, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsDefault)
                                @Html.ValidationMessageFor(model => model.IsDefault, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Theme/assets/vendor/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $('input[type=datetime]').datepicker({
            dateFormat: "dd/MM/yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0"
        });
        $(".investDiv").show();
        $(".loanDiv").hide();
    });
</script>
<script>

    $(document.body).on("change", "#ParentCategoryId", function () {
        if (this.value == 5) {
            $(".investDiv").hide();
            $(".loanDiv").show();
        }
        else {
            $(".investDiv").show();
            $(".loanDiv").hide();
        }
    });

</script>

